#1. Write a program to generate Arithmetic Exception without exception handling
a = 5
b = 0
result = a / b  
print(result)


#2. Handle the Arithmetic exception using try-catch block
try:
    a = 409
    b = 0
    result = a / b  
except ZeroDivisionError:
    print("Can't divide by zero")


#3. Write a Method That Throws an Exception and Call It Without Try Block
def divide(a, b):
    if b == 0:
        raise ZeroDivisionError("You cannot divide by zero")
    return a / b
print(divide(89, 0))  


#4. Write a program with multiple catch blocks
try:
    n = int(input(" "))
    result = 10 / n
except ZeroDivisionError:
    print("Cannot divide by zero")
except ValueError:
    print("Invalid input! Please enter a valid number")
except Exception as e:
    print("An unexpected error occurred: {e}")

#5. Write a program to Throw an Exception with a Custom Message
def check_grade(grade):
    if grade < 20:
        raise ValueError("grade must be 20 or above")
    print("You are passed")
check_grade(21) 

#6. Write a program to create your own exception
class MyOwnException(Exception):
    pass  
def check_number(n):
    if n < 0:
        raise MyOwnException("Negative numbers are not allowed")
try:
    check_number(-12)
except MyOwnException as e:
    print(f"Own Exception Caught: {e}")


#7. Write a program with a finally block
try:
    print("Opening file")
    file = open("Demo.txt", "r")
except FileNotFoundError:
    print("File not found")
finally:
    print("Executing the finally block, closing resources")


#8.Write a program to Generate Arithmetic Exception
K=9
L=0
M=K/L
print(M)


#9.Write a program to generate FileNotFoundException
try:
    file = open("exam.txt", "r")
except FileNotFoundError:
    print("The file was not found")


#10. Write a program to generate ClassNotFoundException
try:
    import Demo_module 
except ModuleNotFoundError:
    print("Module not found")


#11. Write a program to generate iOException
try:
    with open("exam.txt", "r") as file:
        data = file.read()
except IOError:
    print("An iOError occurred")

#12. Write a program to generate NoSuchFieldException
class MyClass:
    def __init__(self):
        self.gender = "Female"
obj = MyClass()
try:
    print(obj.age)  
except AttributeError:
    print("There is no such attribuye exist")









